stages:
- build:debian
- create-debian-package
- TestDebian
- build:ubuntu
- create-ubuntu-package
- TestUbuntu
- build:raspbian
- create-raspbian-package
#

Package Docker Image Debian:
  stage: build:debian
  artifacts:
   expire_in: 20 minutes
   name: build
   paths:
    - /builds/fredbcode/e2guardian  
  image: amd64/debian:stable
  variables:
    OS: "debian"
  script:
    - apt update
    - apt-get -y upgrade
    - apt install --no-install-recommends --no-install-suggests -y curl unzip base-files automake base-passwd
      bash coreutils dash debianutils diffutils dpkg e2fsprogs findutils grep gzip hostname ncurses-base
      libevent-pthreads-* libevent-dev ncurses-bin perl-base sed login sysvinit-utils tar bsdutils
      mount util-linux libc6-dev libc-dev gcc g++ make dpkg-dev autotools-dev debhelper dh-autoreconf dpatch
      libclamav-dev libpcre3-dev zlib1g-dev pkg-config libssl-dev libssl1.1 git ca-certificates lsb-release
    - cd /builds/fredbcode/e2guardian && ./autogen.sh && ./configure  '--prefix=/usr' '--enable-clamd=yes' '--with-proxyuser=e2guardian' '--with-proxygroup=e2guardian' '--sysconfdir=/etc' '--localstatedir=/var' '--enable-icap=yes' '--enable-commandline=yes' '--enable-email=yes' '--enable-ntlm=yes' '--mandir=${prefix}/share/man' '--infodir=${prefix}/share/info' '--enable-pcre=yes' '--enable-sslmitm=yes' 'CPPFLAGS=-mno-sse2 -g -O2'
    - make 
    - find / -name ".git" -exec rm -r "{}" +

Create Debian Package:
  stage: create-debian-package
  image: amd64/debian:stable
  artifacts:
   expire_in: 20 minutes
   name: build 
   paths:
    - /builds/fredbcode/e2guardian
  variables:
    PACKPATH: "/builds/fredbcode/e2guardian"
    PACKDST: "/builds/fredbcode/e2guardian/scripts/debian_package/e2debian_package"
    OS: "debian"
  script:
    - apt update && apt install --no-install-recommends --no-install-suggests -y curl git ca-certificates util-linux binutils
    - git clone https://github.com/fredbcode/scripts
    - cp ${PACKPATH}/src/e2guardian ${PACKDST}/data/usr/sbin/e2guardian
    - chmod +x ${PACKDST}/data/usr/sbin/e2guardian      
    - cp -Rf ${PACKPATH}/configs ${PACKDST}/data/etc/e2guardian
    - mkdir -p ${PACKPATH}/share/e2guardian/languages
    - cp -Rf ${PACKPATH}/data/languages ${PACKDST}/data/usr/share/e2guardian/
    - cp ${PACKPATH}/data/*.gif ${PACKDST}/data/usr/share/e2guardian/
    - cp ${PACKPATH}/data/*swf ${PACKDST}/data/usr/share/e2guardian/
    - cp ${PACKPATH}/data/scripts/e2guardian.service ${PACKDST}/data/lib/systemd/system
    - find ${PACKDST}/ -type f -name "Makefil*" -delete
    - find ${PACKDST}/ -type f -name "*.in" -delete
    - SIZE=`stat -c %s ${PACKDST}/data` && echo $SIZE && sed -i "s/Installed-Size:.*$/Installed-Size:\ $SIZE/g" ${PACKDST}/control/control
    - VFULL=`${PACKDST}/data/usr/sbin/e2guardian -v | sed -n 1p | cut -d ' ' -f 2` && sed -i "s/Version:.*$/Version:\ $VFULL/g" ${PACKDST}/control/control 
    - echo "export VFULL=$VFULL" >> /builds/fredbcode/e2guardian/scripts/debian_package/variables
    - cd ${PACKDST} && cd .. && ./rebuild.sh e2"$OS"_package
    - find / -name ".git" -exec rm -r "{}" +

Test and publish Debian:
  stage: TestDebian
  image: amd64/debian:stable
  artifacts:
   expire_in: 20 minutes
   name: build
   paths:
    - /builds/fredbcode/e2guardian 
  variables:
    PACKPATH: "/builds/fredbcode/e2guardian"
    PACKDST: "/builds/fredbcode/e2guardian/scripts/debian_package"
    CERT_DIR: "/home/e2/e2install/"
    OS: "debian"
  script:
    - source /builds/fredbcode/e2guardian/scripts/debian_package/variables
    - echo $VFULL
    - apt update
    - apt install -y openssl curl git lsb-release libevent-pthreads* libtommath* 
    - VERSION=`lsb_release -cs`
    - cd ${PACKDST} && dpkg -i e2"$OS"_package.deb 
    - sed -i "s/^sslmitm.*$/sslmitm\ =\ on/" /etc/e2guardian/e2guardianf1.conf && sed -i "s/^enablessl.*$/enablessl\ =\ on/" /etc/e2guardian/e2guardian.conf && sed -i "s/^#cacertificatepath/cacertificatepath/;s/#caprivatekeypath/caprivatekeypath/;s/#certprivatekeypath/certprivatekeypath/;s/#generatedcertpath/generatedcertpath/" /etc/e2guardian/e2guardian.conf && sed -i "s/^RANDFILE\s*=\s*\\\$ENV/#RANDFILE\ =\ \$ENV/" /etc/ssl/openssl.cnf
    - mkdir -p ${CERT_DIR}generatedcerts
    - openssl genrsa 4096 > "${CERT_DIR}ca.key" && openssl req -subj "/C=US" -new -x509 -days 3650 -key "${CERT_DIR}ca.key" -out "${CERT_DIR}ca.pem" && openssl genrsa 4096 > "${CERT_DIR}cert.key"
    - chown --recursive e2guardian:e2guardian /home/e2
    - echo "qwant.com" >> /etc/e2guardian/lists/bannedsitelist
    - e2guardian -N &
    - sleep 5 && export https_proxy=http://localhost:8080 
    - curl -k -o /tmp/test https://www.google.com 
    - curl -k https://www.qwant.com | grep -i e2guardian 
    - unset https_proxy
    - mkdir -p "${CI_COMMIT_BRANCH}" 
    - mv e2"$OS"_package.deb ${CI_COMMIT_BRANCH}/e2"$OS"_"$VERSION"_V"$VFULL"_$(date +%Y%m%d).deb
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$SSH_NOSTROMO_KEY")
    - scp -P 822 -r ${CI_COMMIT_BRANCH} e2git@e2guardian.numsys.eu:/datas/e2/html
    - find / -name ".git" -exec rm -r "{}" +
   
Package Docker Image Ubuntu:
  stage: build:ubuntu
  image: amd64/ubuntu:18.04
  artifacts:
   expire_in: 20 minutes
   name: build
   paths:
    - /builds/fredbcode/e2guardian  
  script:
    - source /builds/fredbcode/e2guardian/scripts/debian_package/variables
    - echo $VFULL
    - apt update
    - apt-get -y upgrade
    - apt install --no-install-recommends --no-install-suggests -y curl unzip base-files automake base-passwd
      bash coreutils dash debianutils diffutils dpkg e2fsprogs findutils grep gzip hostname ncurses-base
      libevent-pthreads-* libevent-dev ncurses-bin perl-base sed login sysvinit-utils tar bsdutils
      mount util-linux libc6-dev libc-dev gcc g++ make dpkg-dev autotools-dev debhelper dh-autoreconf dpatch
      libclamav-dev libpcre3-dev zlib1g-dev pkg-config libssl-dev libssl1.1 git ca-certificates lsb-release
    - cd /builds/fredbcode/e2guardian && ./autogen.sh && ./configure  '--prefix=/usr' '--enable-clamd=yes' '--with-proxyuser=e2guardian' '--with-proxygroup=e2guardian' '--sysconfdir=/etc' '--localstatedir=/var' '--enable-icap=yes' '--enable-commandline=yes' '--enable-email=yes' '--enable-ntlm=yes' '--mandir=${prefix}/share/man' '--infodir=${prefix}/share/info' '--enable-pcre=yes' '--enable-sslmitm=yes' 'CPPFLAGS=-mno-sse2 -g -O2'
    - make 
    - find / -name ".git" -exec rm -r "{}" +

Create Ubuntu Package:
  stage: create-ubuntu-package
  image: amd64/ubuntu:18.04
  artifacts:
   expire_in: 20 minutes
   name: build
   paths:
    - /builds/fredbcode/e2guardian  
  variables:
    PACKPATH: "/builds/fredbcode/e2guardian"
    PACKDST: "/builds/fredbcode/e2guardian/scripts/debian_package/e2ubuntu_package"
    OS: "ubuntu"
  script:
    - source /builds/fredbcode/e2guardian/scripts/debian_package/variables
    - echo $VFULL
    - apt update && apt install --no-install-recommends --no-install-suggests -y curl git ca-certificates util-linux binutils
    - SIZE=`stat -c %s ${PACKDST}/data` && echo $SIZE && sed -i "s/Installed-Size:.*$/Installed-Size:\ $SIZE/g" ${PACKDST}/control/control
    - cp ${PACKPATH}/src/e2guardian ${PACKDST}/data/usr/sbin/e2guardian
    - chmod +x ${PACKDST}/data/usr/sbin/e2guardian      
    - cp -Rf ${PACKPATH}/configs ${PACKDST}/data/etc/e2guardian
    - mkdir -p ${PACKPATH}/share/e2guardian/languages
    - cp -Rf ${PACKPATH}/data/languages ${PACKDST}/data/usr/share/e2guardian/
    - cp ${PACKPATH}/data/*.gif ${PACKDST}/data/usr/share/e2guardian/
    - cp ${PACKPATH}/data/*swf ${PACKDST}/data/usr/share/e2guardian/
    - cp ${PACKPATH}/data/scripts/e2guardian.service ${PACKDST}/data/lib/systemd/system
    - find ${PACKDST}/ -type f -name "Makefil*" -delete
    - find ${PACKDST}/ -type f -name "*.in" -delete
    - sed -i "s/Version:.*$/Version:\ $VFULL/g" ${PACKDST}/control/control 
    - cd ${PACKDST} && cd .. && ./rebuild.sh e2"$OS"_package
    - rm -rf .git
    - find / -name ".git" -exec rm -r "{}" +

Test and publish Ubuntu:
  stage: TestUbuntu 
  image: amd64/ubuntu:18.04
  artifacts:
   expire_in: 20 minutes
   name: build
   paths:
    - /builds/fredbcode/e2guardian
  variables:
    PACKPATH: "/builds/fredbcode/e2guardian"
    PACKDST: "/builds/fredbcode/e2guardian/scripts/debian_package/e2ubuntu_package"
    CERT_DIR: "/home/e2/e2install/"
    OS: "ubuntu"
  script:
    - source /builds/fredbcode/e2guardian/scripts/debian_package/variables
    - echo $VFULL
    - apt update
    - apt install -y curl openssl git lsb-release libevent-pthreads* libtommath* 
    - VERSION=`lsb_release -cs`
    - cd ${PACKDST} && cd .. && dpkg -i e2"$OS"_package.deb 
    - sed -i "s/^sslmitm.*$/sslmitm\ =\ on/" /etc/e2guardian/e2guardianf1.conf && sed -i "s/^enablessl.*$/enablessl\ =\ on/" /etc/e2guardian/e2guardian.conf && sed -i "s/^#cacertificatepath/cacertificatepath/;s/#caprivatekeypath/caprivatekeypath/;s/#certprivatekeypath/certprivatekeypath/;s/#generatedcertpath/generatedcertpath/" /etc/e2guardian/e2guardian.conf && sed -i "s/^RANDFILE\s*=\s*\\\$ENV/#RANDFILE\ =\ \$ENV/" /etc/ssl/openssl.cnf 
    - mkdir -p ${CERT_DIR}generatedcerts
    - openssl genrsa 4096 > "${CERT_DIR}ca.key" && openssl req -subj "/C=US" -new -x509 -days 3650 -key "${CERT_DIR}ca.key" -out "${CERT_DIR}ca.pem" && openssl genrsa 4096 > "${CERT_DIR}cert.key"
    - chown --recursive e2guardian:e2guardian /home/e2
    - echo "qwant.com" >> /etc/e2guardian/lists/bannedsitelist
    - e2guardian -N &
    - sleep 5 && export https_proxy=http://localhost:8080 
    - curl -k -o /tmp/test https://www.google.com 
    - curl -k https://www.qwant.com | grep -i e2guardian 
    - unset https_proxy
    - mkdir -p "${CI_COMMIT_BRANCH}"
    - mv e2"$OS"_package.deb ${CI_COMMIT_BRANCH}/e2"$OS"_"$VERSION"_V"$VFULL"_$(date +%Y%m%d).deb
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$SSH_NOSTROMO_KEY")
    - scp -P 822 -r ${CI_COMMIT_BRANCH} e2git@e2guardian.numsys.eu:/datas/e2/html 
    - find / -name ".git" -exec rm -r "{}" +
     
# 
Package Docker Image Raspbian:
  stage: build:raspbian
  artifacts:
   expire_in: 20 minutes
   name: build
   paths:
    - /builds/fredbcode/e2guardian   
  image: amd64/debian:stable
  variables:
    OS: "raspbian" 
  script:
   - source /builds/fredbcode/e2guardian/scripts/debian_package/variables
   - echo $VFULL
   - apt update 
   - apt-get -y upgrade 
   - apt install --no-install-recommends --no-install-suggests -y curl unzip base-files automake base-passwd pkg-config bash coreutils debianutils diffutils dpkg e2fsprogs findutils grep gzip hostname ncurses-base tar git bsdutils lsb-release 
   - echo "deb-src http://deb.debian.org/debian buster main contrib non-free" >> /etc/apt/sources.list 
   - dpkg --add-architecture armhf 
   - apt-get update 
   - apt-get install -y build-essential crossbuild-essential-armhf 
   - apt-get build-dep -y -a armhf e2guardian 
   - cd /builds/fredbcode/e2guardian   
   - ./autogen.sh
   - export 
   - ./configure --host=arm-linux-gnueabihf --prefix=/usr --enable-clamd=yes --with-proxyuser=e2guardian --with-proxygroup=e2guardian --sysconfdir=/etc --localstatedir=/var --enable-icap=yes --enable-commandline=yes --enable-email=yes --enable-ntlm=yes --enable-pcre=yes --enable-sslmitm=yes 
   - make ARCH=arm-linux-gnueabihf 
   - file src/e2guardian | grep "ARM, EABI5"
   - find / -name ".git" -exec rm -r "{}" +

Create Raspbian Package:
  stage: create-raspbian-package
  image: amd64/debian:stable
  artifacts:
   expire_in: 20 minutes
   name: build
   paths:
    - /builds/fredbcode/e2guardian   
  variables:
    PACKPATH: "/builds/fredbcode/e2guardian"
    PACKDST: "/builds/fredbcode/e2guardian/scripts/debian_package/e2raspbian_package"
    OS: "raspbian"
  script:
    - source /builds/fredbcode/e2guardian/scripts/debian_package/variables
    - echo $VFULL
    - apt update
    - apt install -y curl git lsb-release binutils
    - VERSION=`lsb_release -cs`
    - SIZE=`stat -c %s ${PACKDST}/data` && echo $SIZE && sed -i "s/Installed-Size:.*$/Installed-Size:\ $SIZE/g" ${PACKDST}/control/control
    - cp ${PACKPATH}/src/e2guardian ${PACKDST}/data/usr/sbin/e2guardian
    - chmod +x ${PACKDST}/data/usr/sbin/e2guardian      
    - cp -Rf ${PACKPATH}/configs ${PACKDST}/data/etc/e2guardian
    - mkdir -p ${PACKPATH}/share/e2guardian/languages
    - cp -Rf ${PACKPATH}/data/languages ${PACKDST}/data/usr/share/e2guardian/
    - cp ${PACKPATH}/data/*.gif ${PACKDST}/data/usr/share/e2guardian/
    - cp ${PACKPATH}/data/*swf ${PACKDST}/data/usr/share/e2guardian/
    - cp ${PACKPATH}/data/scripts/e2guardian.service ${PACKDST}/data/lib/systemd/system
    - find ${PACKDST}/ -type f -name "Makefil*" -delete
    - find ${PACKDST}/ -type f -name "*.in" -delete
    - cd ${PACKDST} && cd .. && ./rebuild.sh e2"$OS"_package
    - mv e2"$OS"_package.deb ${CI_COMMIT_BRANCH}/e2"$OS"_"$VERSION"_V"$VFULL"_$(date +%Y%m%d).deb
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$SSH_NOSTROMO_KEY")
    - scp -P 822 -r ${CI_COMMIT_BRANCH} e2git@e2guardian.numsys.eu:/datas/e2/html
    - find / -name ".git" -exec rm -r "{}" +
